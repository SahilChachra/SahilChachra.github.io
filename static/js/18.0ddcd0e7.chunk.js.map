{"version":3,"sources":["../../isRequiredIf.js","../node_modules/exenv/index.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../../src/components/twitter-widget-url.js","../../src/components/TwitterTimelineEmbed.js","../../src/components/TwitterShareButton.js","../../src/components/TwitterFollowButton.js","../../src/components/TwitterHashtagButton.js","../../src/components/TwitterMentionButton.js","../../src/components/TwitterTweetEmbed.js","../../src/components/TwitterMomentShare.js","../../src/components/TwitterDMButton.js","../../src/components/TwitterVideoEmbed.js","../../src/components/TwitterOnAirButton.js","../node_modules/scriptjs/dist/script.js"],"names":["propIsRequired","c","propExists","Object","hasOwnProperty","call","missingPropError","Error","TypeError","guardAgainstInvalidArgTypes","canUseDOM","window","document","createElement","ExecutionEnvironment","canUseWorkers","Worker","canUseEventListeners","addEventListener","attachEvent","canUseViewport","screen","define","_classCallCheck","instance","Constructor","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","defineProperty","key","_createClass","protoProps","staticProps","prototype","_typeof","obj","Symbol","iterator","constructor","_possibleConstructorReturn","self","ReferenceError","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","_setPrototypeOf","p","_inherits","subClass","superClass","create","value","_defineProperty","twitterWidgetJs","TwitterTimelineEmbed","isLoading","options","this","refs","embedContainer","parentNode","theme","linkColor","borderColor","lang","onLoad","sourceType","screenName","userId","ownerScreenName","slug","id","url","require","script","console","placeholder","ref","Component","PropTypes","isRequiredIf","widgetId","autoHeight","noHeader","noFooter","noBorders","noScrollbar","transparent","func","TwitterShareButton","TwitterFollowButton","TwitterHashtagButton","tag","TwitterMentionButton","TwitterTweetEmbed","tweetId","TwitterMomentShare","momentId","TwitterDMButton","TwitterVideoEmbed","TwitterOnAirButton","username","definition","scriptpath","urlArgs","doc","head","getElementsByTagName","list","ids","delay","scripts","every","ar","fn","j","each","el","$script","paths","idOrDone","optDone","idOrDoneIsDone","done","join","queue","loopFn","item","callback","dset","split","setTimeout","loading","path","force","test","indexOf","loaded","onload","onerror","async","src","insertBefore","lastChild","get","order","s","shift","str","ready","deps","req","missing","dep","module","exports"],"mappings":"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","file":"static/js/18.0ddcd0e7.chunk.js","sourcesContent":["const VALIDATOR_ARG_ERROR_MESSAGE =\n  'The typeValidator argument must be a function ' +\n  'with the signature function(props, propName, componentName).';\n\nconst MESSAGE_ARG_ERROR_MESSAGE =\n  'The error message is optional, but must be a string if provided.';\n\nconst propIsRequired = (condition, props, propName, componentName) => {\n  if (typeof condition === 'boolean') {\n    return condition;\n  } else if (typeof condition === 'function') {\n    return condition(props, propName, componentName);\n  } else if (Boolean(condition) === true) {\n    return Boolean(condition);\n  }\n\n  return false;\n};\n\nconst propExists = (props, propName) => Object.hasOwnProperty.call(props, propName);\n\nconst missingPropError = (props, propName, componentName, message) => {\n  if (message) {\n    return new Error(message);\n  }\n\n  return new Error(\n    `Required ${props[propName]} \\`${propName}\\`` +\n    ` was not specified in \\`${componentName}\\`.`,\n  );\n};\n\nconst guardAgainstInvalidArgTypes = (typeValidator, message) => {\n  if (typeof typeValidator !== 'function') {\n    throw new TypeError(VALIDATOR_ARG_ERROR_MESSAGE);\n  }\n\n  if (Boolean(message) && typeof message !== 'string') {\n    throw new TypeError(MESSAGE_ARG_ERROR_MESSAGE);\n  }\n};\n\nconst isRequiredIf = (typeValidator, condition, message) => {\n  guardAgainstInvalidArgTypes(typeValidator, message);\n\n  return (props, propName, componentName, ...rest) => {\n    if (propIsRequired(condition, props, propName, componentName)) {\n      if (propExists(props, propName)) {\n        return typeValidator(props, propName, componentName, ...rest);\n      }\n\n      return missingPropError(props, propName, componentName, message);\n    }\n\n    // Is not required, so just run typeValidator.\n    return typeValidator(props, propName, componentName, ...rest);\n  };\n};\n\nexport default isRequiredIf;\n","/*!\n  Copyright (c) 2015 Jed Watson.\n  Based on code that is Copyright 2013-2015, Facebook, Inc.\n  All rights reserved.\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar canUseDOM = !!(\n\t\ttypeof window !== 'undefined' &&\n\t\twindow.document &&\n\t\twindow.document.createElement\n\t);\n\n\tvar ExecutionEnvironment = {\n\n\t\tcanUseDOM: canUseDOM,\n\n\t\tcanUseWorkers: typeof Worker !== 'undefined',\n\n\t\tcanUseEventListeners:\n\t\t\tcanUseDOM && !!(window.addEventListener || window.attachEvent),\n\n\t\tcanUseViewport: canUseDOM && !!window.screen\n\n\t};\n\n\tif (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\tdefine(function () {\n\t\t\treturn ExecutionEnvironment;\n\t\t});\n\t} else if (typeof module !== 'undefined' && module.exports) {\n\t\tmodule.exports = ExecutionEnvironment;\n\t} else {\n\t\twindow.ExecutionEnvironment = ExecutionEnvironment;\n\t}\n\n}());\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","import _typeof from \"../../helpers/esm/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","const twitterWidgetJs = 'https://platform.twitter.com/widgets.js'\nexport default twitterWidgetJs\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport isRequiredIf from 'react-proptype-conditional-require'\nimport ExecutionEnvironment from 'exenv'\nimport twitterWidgetJs from './twitter-widget-url'\n\nexport default class TwitterTimelineEmbed extends Component {\n  static propTypes = {\n    /**\n         * This can be either of profile, likes, list, collection, URL, widget\n         */\n    sourceType: PropTypes.oneOf(['profile', 'likes', 'list', 'collection', 'url', 'widget']).isRequired,\n    /**\n         * username of twitter handle as String\n         */\n    screenName: isRequiredIf(PropTypes.string, props => !props.hasOwnProperty('userId') && (props.sourceType === 'profile' || props.sourceType === 'likes')),\n    /**\n         * UserId of twitter handle as number\n         */\n    userId: isRequiredIf(PropTypes.number, props => !props.hasOwnProperty('screenName') && (props.sourceType === 'profile' || props.sourceType === 'likes')),\n    /**\n         * To show list, used along with slug\n         */\n    ownerScreenName: isRequiredIf(PropTypes.string, props => props.sourceType === 'list' && !props.hasOwnProperty('id')),\n    /**\n         * To show list, used along with ownerScreenName\n         */\n    slug: isRequiredIf(PropTypes.string, props => props.sourceType === 'list' && !props.hasOwnProperty('id')),\n    /**\n         * To show list, unique list id\n         * Also used with collections, in that case its valid collection id\n         */\n    id: isRequiredIf(PropTypes.oneOfType([PropTypes.number, PropTypes.string]), props => (props.sourceType === 'list' && !props.hasOwnProperty('ownerScreenName') && !props.hasOwnProperty('slug')) || props.sourceType === 'collection'),\n    /**\n         * To show twitter content with url.\n         * Supported content includes profiles, likes, lists, and collections.\n         */\n    url: isRequiredIf(PropTypes.string, props => props.sourceType === 'url'),\n    /**\n         * To show custom widget\n         */\n    widgetId: isRequiredIf(PropTypes.string, props => props.sourceType === 'widget'),\n    /**\n         * Additional options to pass to twitter widget plugin\n         */\n    options: PropTypes.object,\n    /**\n         * Automatically fit into parent container height\n         */\n    autoHeight: PropTypes.bool,\n    /**\n         * With dark or light theme\n         */\n    theme: PropTypes.oneOf(['dark', 'light']),\n    /**\n         * With custom link colors. Note: Only Hex colors are supported.\n         */\n    linkColor: PropTypes.string,\n    /**\n         * With custom border colors. Note: Only Hex colors are supported.\n         */\n    borderColor: PropTypes.string,\n    /**\n         * Hide the header from timeline\n         */\n    noHeader: PropTypes.bool,\n    /**\n         * Hide the footer from timeline\n         */\n    noFooter: PropTypes.bool,\n    /**\n         * Hide the border from timeline\n         */\n    noBorders: PropTypes.bool,\n    /**\n         * Hide the scrollbars\n         */\n    noScrollbar: PropTypes.bool,\n    /**\n         * Enable Transparancy\n         */\n    transparent: PropTypes.bool,\n    /**\n         * Custom language code. Supported codes here: https://developer.twitter.com/en/docs/twitter-for-websites/twitter-for-websites-supported-languages/overview.html\n         */\n    lang: PropTypes.string,\n\n    /**\n     * Placeholder while tweet is loading\n     */\n    placeholder: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n    /**\n     * Function to execute after load, return html element\n     */\n    onLoad: PropTypes.func\n  };\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      isLoading: true\n    }\n  }\n\n  buildChromeOptions(options) {\n    options.chrome = ''\n    if (this.props.noHeader) { options.chrome = options.chrome + ' noheader' }\n\n    if (this.props.noFooter) { options.chrome = options.chrome + ' nofooter' }\n\n    if (this.props.noBorders) { options.chrome = options.chrome + ' noborders' }\n\n    if (this.props.noScrollbar) { options.chrome = options.chrome + ' noscrollbar' }\n\n    if (this.props.transparent) { options.chrome = options.chrome + ' transparent' }\n\n    return options\n  }\n\n  buildOptions() {\n    let options = Object.assign({}, this.props.options)\n    if (this.props.autoHeight) { options.height = this.refs.embedContainer.parentNode.offsetHeight }\n\n    options = Object.assign({}, options, {\n      theme: this.props.theme,\n      linkColor: this.props.linkColor,\n      borderColor: this.props.borderColor,\n      lang: this.props.lang\n    })\n\n    return options\n  }\n\n  renderWidget(options) {\n    const { onLoad } = this.props\n    if (!this.isMountCanceled) {\n      window.twttr.widgets.createTimeline(\n        {\n          sourceType: this.props.sourceType,\n          screenName: this.props.screenName,\n          userId: this.props.userId,\n          ownerScreenName: this.props.ownerScreenName,\n          slug: this.props.slug,\n          id: this.props.id || this.props.widgetId,\n          url: this.props.url\n        },\n        this.refs.embedContainer,\n        options\n      ).then((element) => {\n        this.setState({\n          isLoading: false\n        })\n        if (onLoad) {\n          onLoad(element)\n        }\n      })\n    }\n  }\n\n  componentDidMount() {\n    if (ExecutionEnvironment.canUseDOM) {\n      let script = require('scriptjs')\n      script(twitterWidgetJs, 'twitter-embed', () => {\n        if (!window.twttr) {\n          console.error('Failure to load window.twttr in TwitterTimelineEmbed, aborting load.')\n          return\n        }\n\n        let options = this.buildOptions()\n        /** Append chrome options */\n        options = this.buildChromeOptions(options)\n        this.renderWidget(options)\n      })\n    }\n  }\n\n  componentWillUnmount() {\n    this.isMountCanceled = true\n  }\n\n  render() {\n    const { isLoading } = this.state\n    const { placeholder } = this.props\n    return (\n      <React.Fragment>\n        {isLoading && placeholder}\n        <div ref='embedContainer' />\n      </React.Fragment>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport ExecutionEnvironment from 'exenv'\nimport twitterWidgetJs from './twitter-widget-url'\n\nexport default class TwitterShareButton extends Component {\n  static propTypes = {\n    /**\n    * Url for sharing\n    */\n    url: PropTypes.string.isRequired,\n    /**\n    * Additional options for overriding config. Details at : https://dev.twitter.com/web/tweet-button/parameters\n    */\n    options: PropTypes.object,\n\n    /**\n     * Placeholder while tweet is loading\n     */\n    placeholder: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n    /**\n     * Function to execute after load, return html element\n     */\n    onLoad: PropTypes.func\n  };\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      isLoading: true\n    }\n  }\n\n  componentDidMount() {\n    const { onLoad } = this.props\n    if (ExecutionEnvironment.canUseDOM) {\n      let script = require('scriptjs')\n      script(twitterWidgetJs, 'twitter-embed', () => {\n        if (!window.twttr) {\n          console.error('Failure to load window.twttr in TwitterShareButton, aborting load.')\n          return\n        }\n\n        if (!this.isMountCanceled) {\n          window.twttr.widgets.createShareButton(\n            this.props.url,\n            this.refs.embedContainer,\n            this.props.options\n          ).then((element) => {\n            this.setState({\n              isLoading: false\n            })\n            if (onLoad) {\n              onLoad(element)\n            }\n          })\n        }\n      })\n    }\n  }\n\n  componentWillUnmount() {\n    this.isMountCanceled = true\n  }\n\n  render() {\n    const { isLoading } = this.state\n    const { placeholder } = this.props\n    return (\n      <React.Fragment>\n        {isLoading && placeholder}\n        <div ref='embedContainer' />\n      </React.Fragment>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport ExecutionEnvironment from 'exenv'\nimport twitterWidgetJs from './twitter-widget-url'\n\nexport default class TwitterFollowButton extends Component {\n  static propTypes = {\n    /**\n         * Username of twitter user which will be followed on click\n         */\n    screenName: PropTypes.string.isRequired,\n    /**\n         * Additional options to be added to the button\n         */\n    options: PropTypes.object,\n    /**\n     * Placeholder while tweet is loading\n     */\n    placeholder: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n    /**\n     * Function to execute after load, return html element\n     */\n    onLoad: PropTypes.func\n  };\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      isLoading: true\n    }\n  }\n\n  componentDidMount() {\n    const { onLoad } = this.props\n    if (ExecutionEnvironment.canUseDOM) {\n      let script = require('scriptjs')\n      script(twitterWidgetJs, 'twitter-embed', () => {\n        if (!window.twttr) {\n          console.error('Failure to load window.twttr in TwitterFollowButton, aborting load.')\n          return\n        }\n\n        if (!this.isMountCanceled) {\n          window.twttr.widgets.createFollowButton(\n            this.props.screenName,\n            this.refs.embedContainer,\n            this.props.options\n          ).then((element) => {\n            this.setState({\n              isLoading: false\n            })\n            if (onLoad) {\n              onLoad(element)\n            }\n          })\n        }\n      })\n    }\n  }\n\n  componentWillUnmount() {\n    this.isMountCanceled = true\n  }\n\n  render() {\n    const { isLoading } = this.state\n    const { placeholder } = this.props\n    return (\n      <React.Fragment>\n        {isLoading && placeholder}\n        <div ref='embedContainer' />\n      </React.Fragment>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport ExecutionEnvironment from 'exenv'\nimport twitterWidgetJs from './twitter-widget-url'\n\nexport default class TwitterHashtagButton extends Component {\n  static propTypes = {\n    /**\n         * Tag name for hashtag button\n         */\n    tag: PropTypes.string.isRequired,\n    /**\n         * Additional options to be added to the button\n         */\n    options: PropTypes.object,\n    /**\n     * Placeholder while tweet is loading\n     */\n    placeholder: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n    /**\n     * Function to execute after load, return html element\n     */\n    onLoad: PropTypes.func\n  };\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      isLoading: true\n    }\n  }\n\n  componentDidMount() {\n    const { onLoad } = this.props\n    if (ExecutionEnvironment.canUseDOM) {\n      let script = require('scriptjs')\n      script(twitterWidgetJs, 'twitter-embed', () => {\n        if (!window.twttr) {\n          console.error('Failure to load window.twttr in TwitterHashtagButton, aborting load.')\n          return\n        }\n\n        if (!this.isMountCanceled) {\n          window.twttr.widgets.createHashtagButton(\n            this.props.tag,\n            this.refs.embedContainer,\n            this.props.options\n          ).then((element) => {\n            this.setState({\n              isLoading: false\n            })\n            if (onLoad) {\n              onLoad(element)\n            }\n          })\n        }\n      })\n    }\n  }\n\n  componentWillUnmount() {\n    this.isMountCanceled = true\n  }\n\n  render() {\n    const { isLoading } = this.state\n    const { placeholder } = this.props\n    return (\n      <React.Fragment>\n        {isLoading && placeholder}\n        <div ref='embedContainer' />\n      </React.Fragment>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport ExecutionEnvironment from 'exenv'\nimport twitterWidgetJs from './twitter-widget-url'\n\nexport default class TwitterMentionButton extends Component {\n  static propTypes = {\n    /**\n     * Username to which you will need to tweet\n     */\n    screenName: PropTypes.string.isRequired,\n    /**\n     * Additional options for overriding config.\n     */\n    options: PropTypes.object,\n    /**\n     * Placeholder while tweet is loading\n     */\n    placeholder: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n    /**\n     * Function to execute after load, return html element\n     */\n    onLoad: PropTypes.func\n  };\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      isLoading: true\n    }\n  }\n\n  componentDidMount() {\n    const { onLoad } = this.props\n    if (ExecutionEnvironment.canUseDOM) {\n      let script = require('scriptjs')\n      script(twitterWidgetJs, 'twitter-embed', () => {\n        if (!window.twttr) {\n          console.error('Failure to load window.twttr in TwitterMentionButton, aborting load.')\n          return\n        }\n\n        if (!this.isMountCanceled) {\n          window.twttr.widgets.createMentionButton(\n            this.props.screenName,\n            this.refs.embedContainer,\n            this.props.options\n          ).then((element) => {\n            this.setState({\n              isLoading: false\n            })\n            if (onLoad) {\n              onLoad(element)\n            }\n          })\n        }\n      })\n    }\n  }\n\n  componentWillUnmount() {\n    this.isMountCanceled = true\n  }\n\n  render() {\n    const { isLoading } = this.state\n    const { placeholder } = this.props\n    return (\n      <React.Fragment>\n        {isLoading && placeholder}\n        <div ref='embedContainer' />\n      </React.Fragment>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport ExecutionEnvironment from 'exenv'\nimport twitterWidgetJs from './twitter-widget-url'\n\nexport default class TwitterTweetEmbed extends Component {\n  static propTypes = {\n    /**\n         * Tweet id that needs to be shown\n         */\n    tweetId: PropTypes.string.isRequired,\n    /**\n         * Additional options to pass to twitter widget plugin\n         */\n    options: PropTypes.object,\n    /**\n     * Placeholder while tweet is loading\n     */\n    placeholder: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n    /**\n     * Function to execute after load, return html element\n     */\n    onLoad: PropTypes.func\n  };\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      isLoading: true\n    }\n  }\n\n  renderWidget() {\n    const { onLoad } = this.props\n    if (!window.twttr) {\n      console.error('Failure to load window.twttr in TwitterTweetEmbed, aborting load.')\n      return\n    }\n    if (!this.isMountCanceled) {\n      window.twttr.widgets.createTweet(\n        this.props.tweetId,\n        this.refs.embedContainer,\n        this.props.options\n      ).then((element) => {\n        this.setState({\n          isLoading: false\n        })\n        if (onLoad) {\n          onLoad(element)\n        }\n      })\n    }\n  }\n\n  componentDidMount() {\n    if (ExecutionEnvironment.canUseDOM) {\n      let script = require('scriptjs')\n      script(twitterWidgetJs, 'twitter-embed', () => {\n        this.renderWidget()\n      })\n    }\n  }\n\n  componentWillUnmount() {\n    this.isMountCanceled = true\n  }\n\n  render() {\n    const { isLoading } = this.state\n    const { placeholder } = this.props\n    return (\n      <React.Fragment>\n        {isLoading && placeholder}\n        <div ref='embedContainer' />\n      </React.Fragment>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport ExecutionEnvironment from 'exenv'\nimport twitterWidgetJs from './twitter-widget-url'\n\nexport default class TwitterMomentShare extends Component {\n  static propTypes = {\n    /**\n     * id of Twitter moment to show\n     */\n    momentId: PropTypes.string.isRequired,\n    /**\n     * Additional options for overriding config.\n     */\n    options: PropTypes.object,\n    /**\n     * Placeholder while tweet is loading\n     */\n    placeholder: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n    /**\n     * Function to execute after load, return html element\n     */\n    onLoad: PropTypes.func\n  };\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      isLoading: true\n    }\n  }\n\n  componentDidMount() {\n    const { onLoad } = this.props\n    if (ExecutionEnvironment.canUseDOM) {\n      let script = require('scriptjs')\n      script(twitterWidgetJs, 'twitter-embed', () => {\n        if (!window.twttr) {\n          console.error('Failure to load window.twttr in TwitterMomentShare, aborting load.')\n          return\n        }\n\n        if (!this.isMountCanceled) {\n          window.twttr.widgets.createMoment(\n            this.props.momentId,\n            this.refs.shareMoment,\n            this.props.options\n          ).then((element) => {\n            this.setState({\n              isLoading: false\n            })\n            if (onLoad) {\n              onLoad(element)\n            }\n          })\n        }\n      })\n    }\n  }\n\n  componentWillUnmount() {\n    this.isMountCanceled = true\n  }\n\n  render() {\n    const { isLoading } = this.state\n    const { placeholder } = this.props\n    return (\n      <React.Fragment>\n        {isLoading && placeholder}\n        <div ref='shareMoment' />\n      </React.Fragment>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport ExecutionEnvironment from 'exenv'\nimport twitterWidgetJs from './twitter-widget-url'\n\nexport default class TwitterDMButton extends Component {\n  static propTypes = {\n    /**\n    * Twitter user id for DM button\n    */\n    id: PropTypes.number.isRequired,\n    /**\n    * Additional options to be added to the button\n    */\n    options: PropTypes.object,\n    /**\n     * Placeholder while tweet is loading\n     */\n    placeholder: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n    /**\n     * Function to execute after load, return html element\n     */\n    onLoad: PropTypes.func\n  };\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      isLoading: true\n    }\n  }\n\n  componentDidMount() {\n    const { onLoad } = this.props\n    if (ExecutionEnvironment.canUseDOM) {\n      let script = require('scriptjs')\n      script(twitterWidgetJs, 'twitter-embed', () => {\n        if (!window.twttr) {\n          console.error('Failure to load window.twttr in TwitterDMButton, aborting load.')\n          return\n        }\n\n        if (!this.isMountCanceled) {\n          window.twttr.widgets.createDMButton(\n            this.props.id,\n            this.refs.embedContainer,\n            this.props.options\n          ).then((element) => {\n            this.setState({\n              isLoading: false\n            })\n            if (onLoad) {\n              onLoad(element)\n            }\n          })\n        }\n      })\n    }\n  }\n\n  componentWillUnmount() {\n    this.isMountCanceled = true\n  }\n\n  render() {\n    const { isLoading } = this.state\n    const { placeholder } = this.props\n    return (\n      <React.Fragment>\n        {isLoading && placeholder}\n        <div ref='embedContainer' />\n      </React.Fragment>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport ExecutionEnvironment from 'exenv'\nimport twitterWidgetJs from './twitter-widget-url'\n\nexport default class TwitterVideoEmbed extends Component {\n  static propTypes = {\n    /**\n         * Id of video tweet.\n         */\n    id: PropTypes.string.isRequired,\n    /**\n     * Placeholder while tweet is loading\n     */\n    placeholder: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n    /**\n     * Function to execute after load, return html element\n     */\n    onLoad: PropTypes.func\n  };\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      isLoading: true\n    }\n  }\n\n  componentDidMount() {\n    const { onLoad } = this.props\n    if (ExecutionEnvironment.canUseDOM) {\n      let script = require('scriptjs')\n      script(twitterWidgetJs, 'twitter-embed', () => {\n        if (!window.twttr) {\n          console.error('Failure to load window.twttr in TwitterVideoEmbed, aborting load.')\n          return\n        }\n        if (!this.isMountCanceled) {\n          window.twttr.widgets.createVideo(\n            this.props.id,\n            this.refs.embedContainer\n          ).then((element) => {\n            this.setState({\n              isLoading: false\n            })\n            if (onLoad) {\n              onLoad(element)\n            }\n          })\n        }\n      })\n    }\n  }\n\n  componentWillUnmount() {\n    this.isMountCanceled = true\n  }\n\n  render() {\n    const { isLoading } = this.state\n    const { placeholder } = this.props\n    return (\n      <React.Fragment>\n        {isLoading && placeholder}\n        <div ref='embedContainer' />\n      </React.Fragment>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport ExecutionEnvironment from 'exenv'\nimport twitterWidgetJs from './twitter-widget-url'\n\nexport default class TwitterOnAirButton extends Component {\n  static propTypes = {\n    /**\n     * Username for which you require periscope on air button\n     */\n    username: PropTypes.string.isRequired,\n    /**\n     * Additional options for overriding config.\n     */\n    options: PropTypes.object,\n    /**\n     * Placeholder while tweet is loading\n     */\n    placeholder: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n    /**\n     * Function to execute after load, return html element\n     */\n    onLoad: PropTypes.func\n  };\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      isLoading: true\n    }\n  }\n\n  componentDidMount() {\n    const { onLoad } = this.props\n    if (ExecutionEnvironment.canUseDOM) {\n      let script = require('scriptjs')\n      script(twitterWidgetJs, 'twitter-embed', () => {\n        if (!window.twttr) {\n          console.error('Failure to load window.twttr in TwitterOnAirButton, aborting load.')\n          return\n        }\n\n        if (!this.isMountCanceled) {\n          window.twttr.widgets.createPeriscopeOnAirButton(\n            this.props.username,\n            this.refs.embedContainer,\n            this.props.options\n          ).then((element) => {\n            this.setState({\n              isLoading: false\n            })\n            if (onLoad) {\n              onLoad(element)\n            }\n          })\n        }\n      })\n    }\n  }\n\n  componentWillUnmount() {\n    this.isMountCanceled = true\n  }\n\n  render() {\n    const { isLoading } = this.state\n    const { placeholder } = this.props\n    return (\n      <React.Fragment>\n        {isLoading && placeholder}\n        <div ref='embedContainer' />\n      </React.Fragment>\n    )\n  }\n}\n","/*!\n  * $script.js JS loader & dependency manager\n  * https://github.com/ded/script.js\n  * (c) Dustin Diaz 2014 | License MIT\n  */\n\n(function (name, definition) {\n  if (typeof module != 'undefined' && module.exports) module.exports = definition()\n  else if (typeof define == 'function' && define.amd) define(definition)\n  else this[name] = definition()\n})('$script', function () {\n  var doc = document\n    , head = doc.getElementsByTagName('head')[0]\n    , s = 'string'\n    , f = false\n    , push = 'push'\n    , readyState = 'readyState'\n    , onreadystatechange = 'onreadystatechange'\n    , list = {}\n    , ids = {}\n    , delay = {}\n    , scripts = {}\n    , scriptpath\n    , urlArgs\n\n  function every(ar, fn) {\n    for (var i = 0, j = ar.length; i < j; ++i) if (!fn(ar[i])) return f\n    return 1\n  }\n  function each(ar, fn) {\n    every(ar, function (el) {\n      fn(el)\n      return 1\n    })\n  }\n\n  function $script(paths, idOrDone, optDone) {\n    paths = paths[push] ? paths : [paths]\n    var idOrDoneIsDone = idOrDone && idOrDone.call\n      , done = idOrDoneIsDone ? idOrDone : optDone\n      , id = idOrDoneIsDone ? paths.join('') : idOrDone\n      , queue = paths.length\n    function loopFn(item) {\n      return item.call ? item() : list[item]\n    }\n    function callback() {\n      if (!--queue) {\n        list[id] = 1\n        done && done()\n        for (var dset in delay) {\n          every(dset.split('|'), loopFn) && !each(delay[dset], loopFn) && (delay[dset] = [])\n        }\n      }\n    }\n    setTimeout(function () {\n      each(paths, function loading(path, force) {\n        if (path === null) return callback()\n        \n        if (!force && !/^https?:\\/\\//.test(path) && scriptpath) {\n          path = (path.indexOf('.js') === -1) ? scriptpath + path + '.js' : scriptpath + path;\n        }\n        \n        if (scripts[path]) {\n          if (id) ids[id] = 1\n          return (scripts[path] == 2) ? callback() : setTimeout(function () { loading(path, true) }, 0)\n        }\n\n        scripts[path] = 1\n        if (id) ids[id] = 1\n        create(path, callback)\n      })\n    }, 0)\n    return $script\n  }\n\n  function create(path, fn) {\n    var el = doc.createElement('script'), loaded\n    el.onload = el.onerror = el[onreadystatechange] = function () {\n      if ((el[readyState] && !(/^c|loade/.test(el[readyState]))) || loaded) return;\n      el.onload = el[onreadystatechange] = null\n      loaded = 1\n      scripts[path] = 2\n      fn()\n    }\n    el.async = 1\n    el.src = urlArgs ? path + (path.indexOf('?') === -1 ? '?' : '&') + urlArgs : path;\n    head.insertBefore(el, head.lastChild)\n  }\n\n  $script.get = create\n\n  $script.order = function (scripts, id, done) {\n    (function callback(s) {\n      s = scripts.shift()\n      !scripts.length ? $script(s, id, done) : $script(s, callback)\n    }())\n  }\n\n  $script.path = function (p) {\n    scriptpath = p\n  }\n  $script.urlArgs = function (str) {\n    urlArgs = str;\n  }\n  $script.ready = function (deps, ready, req) {\n    deps = deps[push] ? deps : [deps]\n    var missing = [];\n    !each(deps, function (dep) {\n      list[dep] || missing[push](dep);\n    }) && every(deps, function (dep) {return list[dep]}) ?\n      ready() : !function (key) {\n      delay[key] = delay[key] || []\n      delay[key][push](ready)\n      req && req(missing)\n    }(deps.join('|'))\n    return $script\n  }\n\n  $script.done = function (idOrDone) {\n    $script([null], idOrDone)\n  }\n\n  return $script\n});\n"],"sourceRoot":""}