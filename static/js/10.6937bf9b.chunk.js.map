{"version":3,"sources":["containers/projects/Projects.js","portfolio.js","components/button/Button.js"],"names":["Projects","GithubRepoCard","lazy","FailedLoading","renderLoader","useState","repo","setrepo","isDark","useContext","StyleConsumer","getRepoData","useCallback","ApolloClient","uri","request","operation","setContext","headers","authorization","openSource","githubConvertedToken","query","gql","githubUserName","then","result","setrepoFunction","data","user","pinnedItems","edges","catch","error","console","log","array","useEffect","String","fallback","bottom","duration","distance","className","id","emoji","map","v","i","key","node","newTab","text","href","socialMediaLinks","github","greeting","username","title","subTitle","resumeLink","linkedin","gmail","twitter","skillsSection","skills","softwareSkills","skillName","fontAwesomeClassname","workExperiences","viewExperiences","experience","role","company","companylogo","date","desc","achievementSection","subtitle","achivementsCards","image","footerLink","name","url","educationInfo","display","schools","schoolName","logo","subHeader","descBullets","blogSection","blogs","description","talkSection","talks","slides_url","event_url","contactInfo","email_address","twitterDetails","userName","Button","target"],"mappings":"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","file":"static/js/10.6937bf9b.chunk.js","sourcesContent":["import \"./Project.css\";\nimport React, {\n  useState,\n  useEffect,\n  useContext,\n  Suspense,\n  lazy,\n  useCallback,\n} from \"react\";\nimport ApolloClient from \"apollo-boost\";\nimport { gql } from \"apollo-boost\";\nimport emoji from \"react-easy-emoji\";\nimport { Fade } from \"react-reveal\";\nimport Button from \"../../components/button/Button\";\nimport { openSource, socialMediaLinks } from \"../../portfolio\";\nimport StyleConsumer from \"../../contexts/StyleContext\";\nimport Loading from \"../../containers/loading/Loading\";\n\nconst Projects = () => {\n  const GithubRepoCard = lazy(() =>\n    import(\"../../components/githubRepoCard/GithubRepoCard\")\n  );\n  const FailedLoading = () => null;\n  const renderLoader = () => <Loading />;\n  const [repo, setrepo] = useState([]);\n  const { isDark } = useContext(StyleConsumer);\n\n  const getRepoData = useCallback(() => {\n    const client = new ApolloClient({\n      uri: \"https://api.github.com/graphql\",\n      request: (operation) => {\n        operation.setContext({\n          headers: {\n            authorization: `Bearer ${openSource.githubConvertedToken}`,\n          },\n        });\n      },\n    });\n\n    client\n      .query({\n        query: gql`\n        {\n        user(login: \"${openSource.githubUserName}\") {\n          pinnedItems(first: 6, types: [REPOSITORY]) {\n            totalCount\n            edges {\n              node {\n                ... on Repository {\n                  name\n                  description\n                  forkCount\n                  stargazers {\n                    totalCount\n                  }\n                  url\n                  id\n                  diskUsage\n                  primaryLanguage {\n                    name\n                    color\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n        `,\n      })\n      .then((result) => {\n        setrepoFunction(result.data.user.pinnedItems.edges);\n      })\n      .catch(function (error) {\n        console.log(error);\n        setrepoFunction(\"Error\");\n        console.log(\n          \"Because of this Error, nothing is shown in place of Projects section. Projects section not configured\"\n        );\n      });\n  }, []);\n\n  useEffect(() => {\n    getRepoData();\n  }, [getRepoData]);\n\n  function setrepoFunction(array) {\n    setrepo(array);\n  }\n\n  if (!(typeof repo === \"string\" || repo instanceof String)) {\n    return (\n      <Suspense fallback={renderLoader()}>\n        <Fade bottom duration={1000} distance=\"20px\">\n          <div className=\"main\" id=\"opensource\">\n            <h1 className=\"project-title\">\n              {emoji(\"Open Source Projects üìñ\")}\n            </h1>\n            <div className=\"repo-cards-div-main\">\n              {repo.map((v, i) => {\n                return (\n                  <GithubRepoCard key={v.node.id} isDark={isDark} repo={v} />\n                );\n              })}\n            </div>\n            <Button\n              newTab\n              text=\"More Projects\"\n              className=\"project-button\"\n              href={socialMediaLinks.github}\n            />\n          </div>\n        </Fade>\n      </Suspense>\n    );\n  } else {\n    return (\n      <Suspense fallback={renderLoader()}>\n        <FailedLoading />\n      </Suspense>\n    );\n  }\n};\n\nexport default Projects;\n","import emoji from 'react-easy-emoji';\n\nconst greeting = {\n  username: 'Sahil Chachra',\n  title: \"Hi, I'm Sahil Chachra\",\n  subTitle: emoji(\n    'Deep Learning Engineer working in the field of Computer Vision.'\n  ),\n  resumeLink: ''\n};\n\nconst socialMediaLinks = {\n  github: 'https://github.com/SahilChachra/',\n  linkedin: 'https://www.linkedin.com/in/sahil-chachra/',\n  gmail: 'sahil.chachra3@gmail.com',\n  twitter: 'https://twitter.com/ChachraSahil',\n};\n\nconst skillsSection = {\n  title: 'What do I bring to the table?',\n  subTitle: 'Being a tenacious programmer I aim to build top-notch quality products',\n  skills: [\n    emoji('üöÄ Train models to get the best metric value'),\n    emoji('üèõ Design and develop model pipeline'),\n    emoji('üõ°Ô∏è Scaling your model for production'),\n    // emoji('üé® Design model pipeline')\n  ],\n\n\n  // Not being used. Added Skill images directly\n  softwareSkills: [\n    {\n      skillName: 'Docker',\n      fontAwesomeClassname: 'fab fa-docker'\n    },\n    {\n      skillName: 'Python',\n      fontAwesomeClassname: 'fab fa-python'\n    }\n  ]\n};\n\n// Woah! you are quite serious if you looking at the source code\n// I don't believe in showing off experience/skills in numbers\n// But if you do, here you go (these are not displayed on the page)\n\nconst techStack = {\n  viewSkillBars: false,\n  experience: [ \n  ]\n};\n\n// Well, here we go with my past work\n// If you see this, just a heads up its already out-dated\n// Because, I work on new and exciting things everyday!\n\nconst workExperiences = {\n  viewExperiences: true,\n  experience: [\n    {\n      role: 'Deep Learning Engineer',\n      company: 'Tata Consultancy Services',\n      companylogo: '/images/tcs_logo.jpg',\n      date: 'July 2021 ‚Äì Current',\n      desc: 'I train and deploy computer vision models for various use cases'\n    },\n    {\n      role: 'Python Developer (Intern)',\n      company: 'Indian Space Research Organisation',\n      companylogo: '/images/isro_logo.png',\n      date: 'July 2019 ‚Äì October 2019',\n      desc: 'Developed tools using open source data'\n      // descBullets: [\n      //   'Introduced emitting events from worker-threads back to the parent (both inBand and parallel run)',\n      //   'Developed a feature for reporting progress of individual test cases on the jest-circus test runner'\n      // ]\n    },\n\n  ]\n};\n\n// My Open Source Section to View Github Pinned Projects\n\nconst openSource = {\n  \n};\n\n/**\n * Certifications alone don't maketh a man!\n *              ~ Saurav M. H (i'm serious)\n *\n *\n *\n * But still here we go...\n */\n\nconst achievementSection = {\n  title: emoji('Achievements And Certifications üèÜ '),\n  subtitle: \"I don't brag, so here I have showcased some of my certifications and achievements üéàüéà\",\n\n  achivementsCards: [\n    {\n      title: 'CodeVita 2020',\n      subtitle: 'Cleared Pre-Qualifier Zonal Round',\n      image: '/images/codevita.jpg',\n      footerLink: [\n        {\n          name:\n            'National coding contest organised by TCS to hire college graduates',\n          url: ''\n        }\n      ]\n    },\n    {\n      title: 'Codathon 2020',\n      subtitle: 'Our team won the 1st prize',\n      image: '/images/ru_logo.jpeg',\n      footerLink: [\n        {\n          name: 'Conding contest organised by School of C&IT, REVA University',\n          url: ''\n        }\n      ]\n    },\n    {\n      title: 'HackFest 2019',\n      subtitle: 'Won 3rd Prize in IOT',\n      image: '/images/ru_logo.jpeg',\n      footerLink: [\n        {\n          name: 'National level hackathon organised by School of C&IT, REVA University',\n          url:\n            ''\n        }\n      ]\n    },\n  ]\n};\n\nconst educationInfo = {\n  display: true, // Set false to hide this section, defaults to true\n  schools: [\n    {\n      schoolName: 'REVA University, Bengaluru',\n      logo: '/images/ru_logo.jpeg',\n      subHeader: 'B.Tech in Computer Science',\n      duration: '2017 - 2021',\n      desc: 'Mentor, Google Developers Student Club',\n      descBullets: ['Winner of national and intra-university hackathons']\n    },\n    {\n      schoolName: 'Kerala Samajam Model School, Jamshedpur',\n      logo: '/images/ksms_logo.png',\n      subHeader: 'Secondary & High School - Science with Computers',\n      duration: '2003 - 2017',\n      desc: '',\n      descBullets: []\n    }\n  ]\n};\n\n/**\n * A fun and useful way to share my experiences with the people.\n * Because community is everything and sometimes to time to give back your share too\n */\n\nconst blogSection = {\n  title: 'Blogs ‚úç',\n  subtitle:\n    \"Started my Deep Learning journey by reading blogs. Now it's my turn to give back to the community üìô\",\n  blogs: [\n    {\n      url: 'https://sahilchachra.medium.com/paper-summary-torch-manual-seed-3407-is-all-you-need-9ef0f7aa7d78',\n      title: 'Paper Summary ‚Äî torch.manual_seed(3407) is all you need',\n      description:\n        'Summary of paper torch.manual_seed(3402) is all you need which talks about how setting a seed while training a model affects the metrics.'\n    },\n    {\n      url: 'https://sahilchachra.medium.com/paper-summary-what-is-being-transferred-in-transfer-learning-250dc7a9d127',\n      title: \"Paper Summary ‚Äî What is being transferred in transfer learning?\",\n      description:\n        'In this blog I discuss what actually is transferred in transfer learning'\n    },\n    {\n      url: 'https://sahilchachra.medium.com/paper-summary-decoupled-weight-decay-regularization-1583cbc855bd',\n      title: 'Paper summary ‚Äî Decoupled Weight Decay Regularization',\n      description:\n        'In this summary, I discuss about the updated Weight decay techniques for Adam and SDG optimizers.'\n    },\n    {\n      url: 'https://sahilchachra.medium.com/run-yolov5s-with-tensorrt-and-deepstream-on-nvidia-jetson-nano-8c888a2f0eae',\n      title: \"Run YoloV5s with TensorRT and DeepStream on Nvidia Jetson Nano\",\n      description:\n        'This blog is a step by step guide on how to convert a YoloV5 model to TensorRT and run it with DeepStream on the Jetson Nano'\n    },\n    {\n      url: 'https://sahilchachra.medium.com/setting-up-nvidias-jetson-nano-from-jetpack-to-yolov5-60a004bf48bc',\n      title: \"Setting up Nvidia‚Äôs Jetson Nano : From Jetpack to YoloV5\",\n      description:\n        'This blog helps you set up your Jetson nano.'\n    },\n    {\n      url: 'https://sahilchachra.medium.com/comparative-study-using-efficientnetb0-to-efficientnetb7-as-encoder-in-unet-a73ec6aeffe8',\n      title: \"Comparative study ‚Äî Using EfficientNetB0 to EfficientNetB7 as encoder in UNet.\",\n      description:\n        'In this blog I discuss about the metrics observed while having different EfficienNet architectures as encode in UNet'\n    },\n  ]\n};\n\n/**\n * Talks: Because sometimes Blogs alone are not enough\n */\n\n const talkSection = {\n  title: 'Work for the Community',\n  subtitle: emoji('WHAT BETTER WAY TO USE YOUR KNOWLEDGE & SKILLS IF NOT FOR THE COMMUNITY ?'),\n\n  talks: [\n    {\n      title: 'AI For Wildlife #2 by FruitPunch AI',\n      subtitle: 'What is and How to get get started with ML attended by more than 200 people',\n      slides_url:\n        'https://docs.google.com/presentation/d/1uf9vXJJodQwb1NqqqpXTS7XJuo3LRmwN8nlX7Oj5k1I/edit?usp=sharing',\n      event_url: 'https://www.facebook.com/csivitu/photos/pcb.2584585674899467/2584583278233040/'\n    },\n  ]\n};\n\n//const talkSection = { talks : []}\n\nconst contactInfo = {\n  title: emoji('Contact Me üìû'),\n  subtitle: 'Got an interesting project to work on? or want to brain storm on a paper? DM me on any the following platforms or mail me!',\n  email_address: 'sahil.chachra3@gmail.com'\n};\n\n//Twitter Section\n\nconst twitterDetails = {\n  title: 'My Twitter Insight',\n  subtitle: 'Keep yourself updated with what I am working on currently, and some fun stuff too üî•',\n  userName: ''\n};\n\nexport {\n  greeting,\n  socialMediaLinks,\n  skillsSection,\n  techStack,\n  workExperiences,\n  educationInfo,\n  openSource,\n  achievementSection,\n  blogSection,\n  talkSection,\n  contactInfo,\n  twitterDetails\n};\n","import \"./Button.css\";\nimport React from \"react\";\n\nconst Button = ({ text, className, href, newTab }) => {\n  return (\n    <div className={className}>\n      <a className=\"main-button\" href={href} target={newTab && \"_blank\"}>\n        {text}\n      </a>\n    </div>\n  );\n};\n\nexport default Button;\n"],"sourceRoot":""}